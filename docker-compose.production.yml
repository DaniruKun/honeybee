version: "3.9"

services:
  mongo:
    image: mongo:5
    #command: --wiredTigerCacheSizeGB 25
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ${DATA_DIR:-./data}/mongo:/data/db
    ports:
      - "27017:27017"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${MAIN_NODE_HOSTNAME}
      restart_policy:
        condition: on-failure

  redis:
    image: redis:6-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - ${DATA_DIR:-./data}/redis:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${MAIN_NODE_HOSTNAME}
      restart_policy:
        condition: on-failure

  manager:
    image: ${HONEYBEE_IMAGE}
    command: honeybee manager
    environment:
      REDIS_URI: redis://:${REDIS_PASSWORD}@redis
      JOB_CONCURRENCY: ${JOB_CONCURRENCY}
      PERMANENT_WORKER_IP: ${PERMANENT_WORKER_IP}
      TF_PROJECT_ROOT: /app/tf
      TF_VAR_token: ${TF_VAR_token}
      TF_VAR_ssh_keys: ${TF_VAR_ssh_keys}
      TF_VAR_provision_key_path: /tfKey
    volumes:
      - ${TF_PROVISION_KEY_PATH}:/tfKey:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./tf:/app/tf
    depends_on:
      - redis
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${MAIN_NODE_HOSTNAME}
      restart_policy:
        condition: on-failure

  scheduler:
    image: ${HONEYBEE_IMAGE}
    command: honeybee scheduler
    environment:
      REDIS_URI: redis://:${REDIS_PASSWORD}@redis
      JOB_CONCURRENCY: ${JOB_CONCURRENCY}
      HOLODEX_MAX_UPCOMING_HOURS: ${HOLODEX_MAX_UPCOMING_HOURS}
      HOLODEX_API_KEY: ${HOLODEX_API_KEY}
      CACHE_PATH: /cache
    volumes:
      - ${DATA_DIR:-./data}/cache:/cache
    depends_on:
      - redis
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == ${MAIN_NODE_HOSTNAME}
      restart_policy:
        condition: on-failure

  worker:
    image: ${HONEYBEE_IMAGE}
    environment:
      REDIS_URI: redis://:${REDIS_PASSWORD}@redis
      MONGO_URI: mongodb://${MONGO_WORKER_USERNAME}:${MONGO_WORKER_PASSWORD}@mongo/${MONGO_DATABASE}
      JOB_CONCURRENCY: ${JOB_CONCURRENCY}
      DEBUG: masterchat
    depends_on:
      - redis
      - mongo
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

networks:
  default:
    name: honeybee
    external: true
